<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompiler" num="1127" delta="new" >"C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\smart_parking.v" Line 61: Assignment to <arg fmt="%s" index="1">parking_capacity_New</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="296" delta="new" >"C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\calculate_new_capacity.v" Line 40: case condition never applies due to comparison with x or z
</msg>

<msg type="warning" file="HDLCompiler" num="296" delta="new" >"C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\calculate_new_capacity.v" Line 41: case condition never applies due to comparison with x or z
</msg>

<msg type="warning" file="HDLCompiler" num="296" delta="new" >"C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\calculate_new_capacity.v" Line 42: case condition never applies due to comparison with x or z
</msg>

<msg type="warning" file="HDLCompiler" num="296" delta="new" >"C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\calculate_new_capacity.v" Line 43: case condition never applies due to comparison with x or z
</msg>

<msg type="warning" file="HDLCompiler" num="296" delta="new" >"C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\calculate_new_capacity.v" Line 44: case condition never applies due to comparison with x or z
</msg>

<msg type="warning" file="HDLCompiler" num="296" delta="new" >"C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\calculate_new_capacity.v" Line 45: case condition never applies due to comparison with x or z
</msg>

<msg type="warning" file="HDLCompiler" num="296" delta="new" >"C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\calculate_new_capacity.v" Line 46: case condition never applies due to comparison with x or z
</msg>

<msg type="warning" file="HDLCompiler" num="189" delta="new" >"C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\Subtractors.v" Line 34: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">cin</arg>&gt;. Formal port size is <arg fmt="%d" index="2">1</arg>-bit while actual signal size is <arg fmt="%d" index="1">32</arg>-bit.
</msg>

<msg type="warning" file="HDLCompiler" num="189" delta="new" >"C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\Subtractors.v" Line 45: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">cin</arg>&gt;. Formal port size is <arg fmt="%d" index="2">1</arg>-bit while actual signal size is <arg fmt="%d" index="1">32</arg>-bit.
</msg>

<msg type="warning" file="Xst" num="2972" delta="new" >&quot;<arg fmt="%s" index="1">C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\smart_parking.v</arg>&quot; line <arg fmt="%d" index="2">61</arg>. All outputs of instance &lt;<arg fmt="%s" index="3">module4</arg>&gt; of block &lt;<arg fmt="%s" index="4">update_capacity</arg>&gt; are unconnected in block &lt;<arg fmt="%s" index="5">smart_parking</arg>&gt;. Underlying logic will be removed.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\smart_parking.v</arg>&quot; line <arg fmt="%s" index="2">61</arg>: Output port &lt;<arg fmt="%s" index="3">parking_capacity_new</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">module4</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\smart_parking.v</arg>&quot; line <arg fmt="%s" index="2">61</arg>: Output port &lt;<arg fmt="%s" index="3">cap</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">module4</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">park_number&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">park_number&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">park_number&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">new_capacity&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\wireOfSum.v</arg>&quot; line <arg fmt="%s" index="2">39</arg>: Output port &lt;<arg fmt="%s" index="3">cout</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">A4</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\wireOfSum.v</arg>&quot; line <arg fmt="%s" index="2">44</arg>: Output port &lt;<arg fmt="%s" index="3">cout</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">A8</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\Subtractors.v</arg>&quot; line <arg fmt="%s" index="2">41</arg>: Output port &lt;<arg fmt="%s" index="3">cout</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">lastSub</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="new" >&quot;<arg fmt="%s" index="1">C:\Users\ASUS.PIESC\Desktop\Logic Circuit Final Project Section-01\module_6\Subtractors.v</arg>&quot; line <arg fmt="%s" index="2">52</arg>: Output port &lt;<arg fmt="%s" index="3">cout</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">lastadder</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3218" delta="new" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram_park_location</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="warning" file="Xst" num="3001" delta="new" >This design contains one or more registers or latches with an active
asynchronous set and asynchronous reset. While this circuit can be built,
it creates a sub-optimal implementation in terms of area, power and
performance. For a more optimal implementation Xilinx highly recommends
one of the following:

       1) Remove either the set or reset from all registers and latches if
          not needed for required functionality
       2) Modify the code in order to produce a synchronous set
          and/or reset (both is preferred)
       3) Use the -async_to_sync option to transform the asynchronous
          set/reset to synchronous operation
          (timing simulation highly recommended when using this option)
</msg>

<msg type="info" file="Xst" num="2169" delta="new" >HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.
</msg>

</messages>

